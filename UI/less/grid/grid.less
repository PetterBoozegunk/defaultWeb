/// <reference path="../vars/vars.less" />
/// <reference path="../mixins/static.mixins.less" />
/// <reference path="../mixins/mixins.less" />

//@siteWidth: 978px;
//@gutter: 30px;
//@nbrColumns: 12;
        
//The grid-vars is set in /UI/less/vars/vars.less

.col,
.row {
   box-sizing: border-box;
    min-height: 1px;
}

.col {
    //margin-right: -100%;
    float: left;
}

.row {
    zoom: 1;
    clear: both;

    &:before,
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

@halfGutter: unit(@gutter / 2, px);

//@nbrGutters: (@nbrColumns - 1);
//@totalGutterPixelWidth: @nbrGutters * @gutter;

//@columnPixelWidth: (@siteWidth - @totalGutterPixelWidth) / @nbrColumns;


.colSpan(@nbrCols: 1, @parentColSpan: @nbrColumns) {
//.colSpan(@nbrCols: 1, @offsetLeft: 0, @parentColSpan: @nbrColumns) {
    /*@currentNbrGutters: (@parentColSpan - 1);
    @parentPixelWidth: (@columnPixelWidth * @parentColSpan) + (@currentNbrGutters * @gutter);

    @gutterPercentWidth: unit((@gutter / (@parentPixelWidth - @currentNbrGutters)) * 100, %);
    @columnPercentWidth: (100 / @parentColSpan) + (@gutterPercentWidth / @parentColSpan);
        
    @marginLeft: unit(@columnPercentWidth * @offsetLeft, %);
    margin-left: @marginLeft;

    @width: unit(((@columnPercentWidth * @nbrCols) - @gutterPercentWidth), %);
    width: @width;*/

    @singleColWidth: (100 / @nbrColumns);
    @currentWidth: unit(@singleColWidth * @nbrCols, %);

    width: @currentWidth;
    border: solid @halfGutter transparent;
}

.section {
    margin: 0 auto;
    max-width: @siteWidth;
}
.outerGridWrapRow {
    margin-right: ~"-@{halfGutter}";
    margin-left: ~"-@{halfGutter}";
}

.mainContent {
    nav {
        .colSpan(2);
    }
    
    article {
        .colSpan(7);
    }
    
    aside {
        .colSpan(3);
    }
}